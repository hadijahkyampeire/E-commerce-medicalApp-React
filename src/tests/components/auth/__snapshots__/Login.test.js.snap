// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login tests should render without crashing 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "dispatch": [Function],
        "getAction": [Function],
        "getActions": [Function],
        "getState": [Function],
        "isActionDispatched": [Function],
        "isActionTypeDispatched": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(Login)
      LoginAction={[MockFunction]}
    />
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Provider {
      "__reactInternalMemoizedMergedChildContext": Object {
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": null,
      },
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": Object {
            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
            "lineNumber": 12,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                "lineNumber": 25,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 26,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 27,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 28,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 29,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 30,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 34,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputPassword1"
                          >
                            Password
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 36,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <hr />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "hr",
                  "updateQueue": null,
                },
                "stateNode": <h4>
                  Login
                </h4>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "h4",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="login"
              >
                <h4>
                  Login
                </h4>
                <hr />
                <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [Function],
            },
            "memoizedState": Object {
              "email": "",
              "password": "",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Login {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "handleInputChange": [Function],
              "handleLogin": [Function],
              "props": Object {
                "LoginAction": [Function],
              },
              "refs": Object {},
              "state": Object {
                "email": "",
                "password": "",
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "LoginAction": [MockFunction],
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "LoginAction": [MockFunction],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Connect {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "props": Object {
              "LoginAction": [MockFunction],
            },
            "propsMode": false,
            "refs": Object {},
            "renderCount": 0,
            "selector": Object {
              "error": null,
              "props": Object {
                "LoginAction": [Function],
              },
              "run": [Function],
              "shouldComponentUpdate": false,
            },
            "setWrappedInstance": [Function],
            "state": Object {},
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
            "version": 0,
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": Object {
            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
            "lineNumber": 12,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                "lineNumber": 25,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 26,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 27,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 28,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 29,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 30,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 34,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputPassword1"
                          >
                            Password
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 36,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <hr />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "hr",
                  "updateQueue": null,
                },
                "stateNode": <h4>
                  Login
                </h4>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "h4",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="login"
              >
                <h4>
                  Login
                </h4>
                <hr />
                <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [Function],
            },
            "memoizedState": Object {
              "email": "",
              "password": "",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Login {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "handleInputChange": [Function],
              "handleLogin": [Function],
              "props": Object {
                "LoginAction": [Function],
              },
              "refs": Object {},
              "state": Object {
                "email": "",
                "password": "",
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "LoginAction": [MockFunction],
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "LoginAction": [MockFunction],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Connect {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "props": Object {
              "LoginAction": [MockFunction],
            },
            "propsMode": false,
            "refs": Object {},
            "renderCount": 0,
            "selector": Object {
              "error": null,
              "props": Object {
                "LoginAction": [Function],
              },
              "run": [Function],
              "shouldComponentUpdate": false,
            },
            "setWrappedInstance": [Function],
            "state": Object {},
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
            "version": 0,
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": Object {
            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
            "lineNumber": 12,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                "lineNumber": 25,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 26,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 27,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 28,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 29,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 30,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 34,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputPassword1"
                          >
                            Password
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 36,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <hr />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "hr",
                  "updateQueue": null,
                },
                "stateNode": <h4>
                  Login
                </h4>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "h4",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="login"
              >
                <h4>
                  Login
                </h4>
                <hr />
                <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [Function],
            },
            "memoizedState": Object {
              "email": "",
              "password": "",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Login {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "handleInputChange": [Function],
              "handleLogin": [Function],
              "props": Object {
                "LoginAction": [Function],
              },
              "refs": Object {},
              "state": Object {
                "email": "",
                "password": "",
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "LoginAction": [MockFunction],
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "LoginAction": [MockFunction],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Connect {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "storeSubscription": null,
            },
            "props": Object {
              "LoginAction": [MockFunction],
            },
            "propsMode": false,
            "refs": Object {},
            "renderCount": 0,
            "selector": Object {
              "error": null,
              "props": Object {
                "LoginAction": [Function],
              },
              "run": [Function],
              "shouldComponentUpdate": false,
            },
            "setWrappedInstance": [Function],
            "state": Object {},
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
            "version": 0,
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "memoizedProps": Object {
          "children": <Connect(Login)
            LoginAction={[MockFunction]}
          />,
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Connect(Login)
            LoginAction={[MockFunction]}
          />,
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 5,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {
        "children": <Connect(Login)
          LoginAction={[MockFunction]}
        />,
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
      },
      "refs": Object {},
      "state": null,
      "store": Object {
        "dispatch": [Function],
        "getAction": [Function],
        "getActions": [Function],
        "getState": [Function],
        "isActionDispatched": [Function],
        "isActionTypeDispatched": [Function],
        "subscribe": [Function],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Connect(Login)
        LoginAction={[MockFunction]}
      />,
      "store": Object {
        "dispatch": [Function],
        "getAction": [Function],
        "getActions": [Function],
        "getState": [Function],
        "isActionDispatched": [Function],
        "isActionTypeDispatched": [Function],
        "subscribe": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": Connect {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": null,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": null,
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": null,
        },
        "_reactInternalFiber": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": Object {
            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
            "lineNumber": 12,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                "lineNumber": 25,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 26,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 27,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 28,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 29,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 30,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 34,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputPassword1"
                          >
                            Password
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 36,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <hr />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "hr",
                  "updateQueue": null,
                },
                "stateNode": <h4>
                  Login
                </h4>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "h4",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="login"
              >
                <h4>
                  Login
                </h4>
                <hr />
                <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [Function],
            },
            "memoizedState": Object {
              "email": "",
              "password": "",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Login {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "handleInputChange": [Function],
              "handleLogin": [Function],
              "props": Object {
                "LoginAction": [Function],
              },
              "refs": Object {},
              "state": Object {
                "email": "",
                "password": "",
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "LoginAction": [MockFunction],
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "LoginAction": [MockFunction],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 50,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="login"
                      >
                        <h4>
                          Login
                        </h4>
                        <hr />
                        <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Connect(Login)
                LoginAction={[MockFunction]}
              />,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 49,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="login"
                      >
                        <h4>
                          Login
                        </h4>
                        <hr />
                        <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": Object {
                      "callback": null,
                      "expirationTime": 1,
                      "next": null,
                      "nextEffect": null,
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "tag": 0,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 32,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      }
                    }
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Provider {
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
              "refs": Object {},
              "state": null,
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": null,
        },
        "props": Object {
          "LoginAction": [MockFunction],
        },
        "propsMode": false,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "LoginAction": [Function],
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
        "version": 0,
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "LoginAction": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": Login {
          "_reactInternalFiber": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 50,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 49,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 49,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Provider {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": null,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                "lineNumber": 25,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 26,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 27,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 28,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 29,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 30,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "aria-describedby": "emailHelp",
                            "className": "form-control",
                            "id": "email",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "Enter email",
                            "type": "email",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "label",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />,
                        ],
                        "className": "form-group",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 32,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 33,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Password",
                            "htmlFor": "InputPassword1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 34,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "form-control",
                              "id": "InputPassword1",
                              "name": "password",
                              "onChange": [Function],
                              "placeholder": "Password",
                              "type": "password",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputPassword1"
                          >
                            Password
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>,
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 36,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Login",
                            "className": "btn btn-success",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>,
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>,
                      ],
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "form",
                    "updateQueue": null,
                  },
                  "stateNode": <hr />,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "hr",
                  "updateQueue": null,
                },
                "stateNode": <h4>
                  Login
                </h4>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "h4",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <h4>
                    Login
                  </h4>,
                  <hr />,
                  <form
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>,
                ],
                "className": "login",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="login"
              >
                <h4>
                  Login
                </h4>
                <hr />
                <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [Function],
            },
            "memoizedState": Object {
              "email": "",
              "password": "",
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 50,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 49,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 49,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 1,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "children": <Connect(Login)
                                    LoginAction={[MockFunction]}
                                  />,
                                  "store": Object {
                                    "dispatch": [Function],
                                    "getAction": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "isActionDispatched": [Function],
                                    "isActionTypeDispatched": [Function],
                                    "subscribe": [Function],
                                  },
                                }
                              }
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 32,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Provider {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": null,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "handleInputChange": [Function],
          "handleLogin": [Function],
          "props": Object {
            "LoginAction": [Function],
          },
          "refs": Object {},
          "state": Object {
            "email": "",
            "password": "",
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "LoginAction": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": <div
            class="login"
          >
            <h4>
              Login
            </h4>
            <hr />
            <form>
              <div
                class="form-group"
              >
                <label
                  for="InputEmail1"
                >
                  Enter Email
                </label>
                <input
                  aria-describedby="emailHelp"
                  class="form-control"
                  id="email"
                  name="email"
                  placeholder="Enter email"
                  type="email"
                  value=""
                />
              </div>
              <div
                class="form-group"
              >
                <label
                  for="InputPassword1"
                >
                  Password
                </label>
                <input
                  class="form-control"
                  id="InputPassword1"
                  name="password"
                  placeholder="Password"
                  type="password"
                  value=""
                />
              </div>
              <button
                class="btn btn-success"
                type="submit"
              >
                Login
              </button>
            </form>
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Login
              </h4>,
              <hr />,
              <form
                onSubmit={[Function]}
              >
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="InputEmail1"
                  >
                    Enter Email
                  </label>
                  <input
                    aria-describedby="emailHelp"
                    className="form-control"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter email"
                    type="email"
                    value=""
                  />
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="InputPassword1"
                  >
                    Password
                  </label>
                  <input
                    className="form-control"
                    id="InputPassword1"
                    name="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
                  />
                </div>
                <button
                  className="btn btn-success"
                  type="submit"
                >
                  Login
                </button>
              </form>,
            ],
            "className": "login",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <h4>
                Login
              </h4>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
              },
              "ref": null,
              "rendered": Array [
                "Login",
              ],
              "type": "h4",
            },
            Object {
              "instance": <hr />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "hr",
            },
            Object {
              "instance": <form>
                <div
                  class="form-group"
                >
                  <label
                    for="InputEmail1"
                  >
                    Enter Email
                  </label>
                  <input
                    aria-describedby="emailHelp"
                    class="form-control"
                    id="email"
                    name="email"
                    placeholder="Enter email"
                    type="email"
                    value=""
                  />
                </div>
                <div
                  class="form-group"
                >
                  <label
                    for="InputPassword1"
                  >
                    Password
                  </label>
                  <input
                    class="form-control"
                    id="InputPassword1"
                    name="password"
                    placeholder="Password"
                    type="password"
                    value=""
                  />
                </div>
                <button
                  class="btn btn-success"
                  type="submit"
                >
                  Login
                </button>
              </form>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      className="form-control"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>,
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      className="form-control"
                      id="InputPassword1"
                      name="password"
                      onChange={[Function]}
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>,
                  <button
                    className="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>,
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Enter Email",
                        "htmlFor": "InputEmail1",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Enter Email",
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "aria-describedby": "emailHelp",
                        "className": "form-control",
                        "id": "email",
                        "name": "email",
                        "onChange": [Function],
                        "placeholder": "Enter email",
                        "type": "email",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>,
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <label
                        for="InputPassword1"
                      >
                        Password
                      </label>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Password",
                        "htmlFor": "InputPassword1",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Password",
                      ],
                      "type": "label",
                    },
                    Object {
                      "instance": <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "id": "InputPassword1",
                        "name": "password",
                        "onChange": [Function],
                        "placeholder": "Password",
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Login",
                    "className": "btn btn-success",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Login",
                  ],
                  "type": "button",
                },
              ],
              "type": "form",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Provider {
        "__reactInternalMemoizedMergedChildContext": Object {
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": null,
        },
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                  "lineNumber": 12,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 52,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 25,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 54,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 26,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 56,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 27,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 57,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 28,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 60,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 29,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Enter Email",
                                "htmlFor": "InputEmail1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Enter Email",
                                "htmlFor": "InputEmail1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 61,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 30,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "aria-describedby": "emailHelp",
                                  "className": "form-control",
                                  "id": "email",
                                  "name": "email",
                                  "onChange": [Function],
                                  "placeholder": "Enter email",
                                  "type": "email",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "aria-describedby": "emailHelp",
                                  "className": "form-control",
                                  "id": "email",
                                  "name": "email",
                                  "onChange": [Function],
                                  "placeholder": "Enter email",
                                  "type": "email",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>,
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>,
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 58,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 32,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 62,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 33,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Password",
                                  "htmlFor": "InputPassword1",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Password",
                                  "htmlFor": "InputPassword1",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 63,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                    "lineNumber": 34,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "className": "form-control",
                                    "id": "InputPassword1",
                                    "name": "password",
                                    "onChange": [Function],
                                    "placeholder": "Password",
                                    "type": "password",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "className": "form-control",
                                    "id": "InputPassword1",
                                    "name": "password",
                                    "onChange": [Function],
                                    "placeholder": "Password",
                                    "type": "password",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                  "tag": 7,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "label",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <label
                                    htmlFor="InputPassword1"
                                  >
                                    Password
                                  </label>,
                                  <input
                                    className="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                ],
                                "className": "form-group",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <label
                                    htmlFor="InputPassword1"
                                  >
                                    Password
                                  </label>,
                                  <input
                                    className="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                ],
                                "className": "form-group",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 59,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 36,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Login",
                                  "className": "btn btn-success",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Login",
                                  "className": "btn btn-success",
                                  "type": "submit",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>,
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              <button
                                className="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>,
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              <button
                                className="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <hr />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "hr",
                        "updateQueue": null,
                      },
                      "stateNode": <h4>
                        Login
                      </h4>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "h4",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h4>
                          Login
                        </h4>,
                        <hr />,
                        <form
                          onSubmit={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                      ],
                      "className": "login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h4>
                          Login
                        </h4>,
                        <hr />,
                        <form
                          onSubmit={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                      ],
                      "className": "login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "LoginAction": [Function],
                  },
                  "memoizedState": Object {
                    "email": "",
                    "password": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "LoginAction": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Login {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "handleInputChange": [Function],
                    "handleLogin": [Function],
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "refs": Object {},
                    "state": Object {
                      "email": "",
                      "password": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [MockFunction],
                },
                "memoizedState": Object {},
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Connect {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "props": Object {
                    "LoginAction": [MockFunction],
                  },
                  "propsMode": false,
                  "refs": Object {},
                  "renderCount": 0,
                  "selector": Object {
                    "error": null,
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "run": [Function],
                    "shouldComponentUpdate": false,
                  },
                  "setWrappedInstance": [Function],
                  "state": Object {},
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                  "version": 0,
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Connect {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": null,
              },
              "props": Object {
                "LoginAction": [MockFunction],
              },
              "propsMode": false,
              "refs": Object {},
              "renderCount": 0,
              "selector": Object {
                "error": null,
                "props": Object {
                  "LoginAction": [Function],
                },
                "run": [Function],
                "shouldComponentUpdate": false,
              },
              "setWrappedInstance": [Function],
              "state": Object {},
              "store": Object {
                "dispatch": [Function],
                "getAction": [Function],
                "getActions": [Function],
                "getState": [Function],
                "isActionDispatched": [Function],
                "isActionTypeDispatched": [Function],
                "subscribe": [Function],
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
              "version": 0,
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "children": <Connect(Login)
              LoginAction={[MockFunction]}
            />,
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Connect(Login)
              LoginAction={[MockFunction]}
            />,
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 51,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                "lineNumber": 12,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 25,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 56,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 29,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Enter Email",
                              "htmlFor": "InputEmail1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 30,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "aria-describedby": "emailHelp",
                                "className": "form-control",
                                "id": "email",
                                "name": "email",
                                "onChange": [Function],
                                "placeholder": "Enter email",
                                "type": "email",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 32,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 62,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 33,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Password",
                                "htmlFor": "InputPassword1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 63,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 34,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "form-control",
                                  "id": "InputPassword1",
                                  "name": "password",
                                  "onChange": [Function],
                                  "placeholder": "Password",
                                  "type": "password",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputPassword1"
                              >
                                Password
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>,
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 59,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 36,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Login",
                                "className": "btn btn-success",
                                "type": "submit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                className="form-control"
                                id="email"
                                name="email"
                                onChange={[Function]}
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>,
                            <button
                              className="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                          ],
                          "onSubmit": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "stateNode": <hr />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "stateNode": <h4>
                      Login
                    </h4>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "h4",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h4>
                        Login
                      </h4>,
                      <hr />,
                      <form
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            className="form-control"
                            id="email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            className="form-control"
                            id="InputPassword1"
                            name="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          className="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                    ],
                    "className": "login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [Function],
                },
                "memoizedState": Object {
                  "email": "",
                  "password": "",
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Login {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "handleInputChange": [Function],
                  "handleLogin": [Function],
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "email": "",
                    "password": "",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 5,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [MockFunction],
              },
              "memoizedState": Object {},
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Connect {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "props": Object {
                  "LoginAction": [MockFunction],
                },
                "propsMode": false,
                "refs": Object {},
                "renderCount": 0,
                "selector": Object {
                  "error": null,
                  "props": Object {
                    "LoginAction": [Function],
                  },
                  "run": [Function],
                  "shouldComponentUpdate": false,
                },
                "setWrappedInstance": [Function],
                "state": Object {},
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
                "version": 0,
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 5,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                  "lineNumber": 12,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 52,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 25,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 54,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Login",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Login",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 26,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 56,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 27,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 57,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 28,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 60,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 29,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Enter Email",
                                "htmlFor": "InputEmail1",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Enter Email",
                                "htmlFor": "InputEmail1",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 61,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 30,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "aria-describedby": "emailHelp",
                                  "className": "form-control",
                                  "id": "email",
                                  "name": "email",
                                  "onChange": [Function],
                                  "placeholder": "Enter email",
                                  "type": "email",
                                  "value": "",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "aria-describedby": "emailHelp",
                                  "className": "form-control",
                                  "id": "email",
                                  "name": "email",
                                  "onChange": [Function],
                                  "placeholder": "Enter email",
                                  "type": "email",
                                  "value": "",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "label",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>,
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>,
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />,
                              ],
                              "className": "form-group",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 58,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 32,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 62,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 33,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Password",
                                  "htmlFor": "InputPassword1",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Password",
                                  "htmlFor": "InputPassword1",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 63,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                    "lineNumber": 34,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "className": "form-control",
                                    "id": "InputPassword1",
                                    "name": "password",
                                    "onChange": [Function],
                                    "placeholder": "Password",
                                    "type": "password",
                                    "value": "",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "className": "form-control",
                                    "id": "InputPassword1",
                                    "name": "password",
                                    "onChange": [Function],
                                    "placeholder": "Password",
                                    "type": "password",
                                    "value": "",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                  "tag": 7,
                                  "treeBaseDuration": 0,
                                  "type": "input",
                                  "updateQueue": null,
                                },
                                "stateNode": <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "label",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <label
                                    htmlFor="InputPassword1"
                                  >
                                    Password
                                  </label>,
                                  <input
                                    className="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                ],
                                "className": "form-group",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <label
                                    htmlFor="InputPassword1"
                                  >
                                    Password
                                  </label>,
                                  <input
                                    className="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />,
                                ],
                                "className": "form-group",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 59,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                  "lineNumber": 36,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Login",
                                  "className": "btn btn-success",
                                  "type": "submit",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Login",
                                  "className": "btn btn-success",
                                  "type": "submit",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>,
                                "tag": 7,
                                "treeBaseDuration": 0,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>,
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              <button
                                className="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  className="form-control"
                                  id="email"
                                  name="email"
                                  onChange={[Function]}
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>,
                              <div
                                className="form-group"
                              >
                                <label
                                  htmlFor="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  className="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  onChange={[Function]}
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>,
                              <button
                                className="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>,
                            ],
                            "onSubmit": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "form",
                          "updateQueue": null,
                        },
                        "stateNode": <hr />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "hr",
                        "updateQueue": null,
                      },
                      "stateNode": <h4>
                        Login
                      </h4>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "h4",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h4>
                          Login
                        </h4>,
                        <hr />,
                        <form
                          onSubmit={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                      ],
                      "className": "login",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h4>
                          Login
                        </h4>,
                        <hr />,
                        <form
                          onSubmit={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>,
                      ],
                      "className": "login",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="login"
                    >
                      <h4>
                        Login
                      </h4>
                      <hr />
                      <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>
                    </div>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "LoginAction": [Function],
                  },
                  "memoizedState": Object {
                    "email": "",
                    "password": "",
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "LoginAction": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Login {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "handleInputChange": [Function],
                    "handleLogin": [Function],
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "refs": Object {},
                    "state": Object {
                      "email": "",
                      "password": "",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [MockFunction],
                },
                "memoizedState": Object {},
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Connect {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "props": Object {
                    "LoginAction": [MockFunction],
                  },
                  "propsMode": false,
                  "refs": Object {},
                  "renderCount": 0,
                  "selector": Object {
                    "error": null,
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "run": [Function],
                    "shouldComponentUpdate": false,
                  },
                  "setWrappedInstance": [Function],
                  "state": Object {},
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                  "version": 0,
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login"
                  >
                    <h4>
                      Login
                    </h4>
                    <hr />
                    <form>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        class="form-group"
                      >
                        <label
                          for="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        class="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 5,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "children": <Connect(Login)
            LoginAction={[MockFunction]}
          />,
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
        },
        "refs": Object {},
        "state": null,
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Connect(Login)
          LoginAction={[MockFunction]}
        />,
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": Connect {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "storeSubscription": null,
          },
          "__reactInternalMemoizedMergedChildContext": Object {
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "storeSubscription": null,
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "storeSubscription": null,
          },
          "_reactInternalFiber": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
              "lineNumber": 12,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Login {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "handleInputChange": [Function],
                "handleLogin": [Function],
                "props": Object {
                  "LoginAction": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "email": "",
                  "password": "",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 5,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "LoginAction": [MockFunction],
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "LoginAction": [MockFunction],
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 50,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="login"
                      >
                        <h4>
                          Login
                        </h4>
                        <hr />
                        <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Connect(Login)
                  LoginAction={[MockFunction]}
                />,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 49,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 47,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugID": 47,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div
                          class="login"
                        >
                          <h4>
                            Login
                          </h4>
                          <hr />
                          <form>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputEmail1"
                              >
                                Enter Email
                              </label>
                              <input
                                aria-describedby="emailHelp"
                                class="form-control"
                                id="email"
                                name="email"
                                placeholder="Enter email"
                                type="email"
                                value=""
                              />
                            </div>
                            <div
                              class="form-group"
                            >
                              <label
                                for="InputPassword1"
                              >
                                Password
                              </label>
                              <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />
                            </div>
                            <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>
                          </form>
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 12,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "timeoutHandle": -1,
                    },
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        }
                      }
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div
                        class="login"
                      >
                        <h4>
                          Login
                        </h4>
                        <hr />
                        <form>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>
                          <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>
                          <button
                            class="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>
                        </form>
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 12,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "timeoutHandle": -1,
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "children": <Connect(Login)
                              LoginAction={[MockFunction]}
                            />,
                            "store": Object {
                              "dispatch": [Function],
                              "getAction": [Function],
                              "getActions": [Function],
                              "getState": [Function],
                              "isActionDispatched": [Function],
                              "isActionTypeDispatched": [Function],
                              "subscribe": [Function],
                            },
                          }
                        }
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Provider {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": null,
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <Connect(Login)
                    LoginAction={[MockFunction]}
                  />,
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                },
                "refs": Object {},
                "state": null,
                "store": Object {
                  "dispatch": [Function],
                  "getAction": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "isActionDispatched": [Function],
                  "isActionTypeDispatched": [Function],
                  "subscribe": [Function],
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {
            "store": Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            },
            "storeSubscription": null,
          },
          "props": Object {
            "LoginAction": [MockFunction],
          },
          "propsMode": false,
          "refs": Object {},
          "renderCount": 0,
          "selector": Object {
            "error": null,
            "props": Object {
              "LoginAction": [Function],
            },
            "run": [Function],
            "shouldComponentUpdate": false,
          },
          "setWrappedInstance": [Function],
          "state": Object {},
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
          "version": 0,
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "LoginAction": [MockFunction],
        },
        "ref": null,
        "rendered": Object {
          "instance": Login {
            "_reactInternalFiber": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                  "lineNumber": 12,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [MockFunction],
                },
                "memoizedState": Object {},
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [MockFunction],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="login"
                            >
                              <h4>
                                Login
                              </h4>
                              <hr />
                              <form>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputEmail1"
                                  >
                                    Enter Email
                                  </label>
                                  <input
                                    aria-describedby="emailHelp"
                                    class="form-control"
                                    id="email"
                                    name="email"
                                    placeholder="Enter email"
                                    type="email"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputPassword1"
                                  >
                                    Password
                                  </label>
                                  <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />
                                </div>
                                <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>
                              </form>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="login"
                            >
                              <h4>
                                Login
                              </h4>
                              <hr />
                              <form>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputEmail1"
                                  >
                                    Enter Email
                                  </label>
                                  <input
                                    aria-describedby="emailHelp"
                                    class="form-control"
                                    id="email"
                                    name="email"
                                    placeholder="Enter email"
                                    type="email"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputPassword1"
                                  >
                                    Password
                                  </label>
                                  <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />
                                </div>
                                <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>
                              </form>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Provider {
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                      "storeSubscription": null,
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Connect {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "props": Object {
                    "LoginAction": [MockFunction],
                  },
                  "propsMode": false,
                  "refs": Object {},
                  "renderCount": 0,
                  "selector": Object {
                    "error": null,
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "run": [Function],
                    "shouldComponentUpdate": false,
                  },
                  "setWrappedInstance": [Function],
                  "state": Object {},
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                  "version": 0,
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                  "lineNumber": 25,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                    "lineNumber": 26,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Login",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Login",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                      "lineNumber": 26,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                        "lineNumber": 27,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                          "lineNumber": 28,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 29,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Enter Email",
                            "htmlFor": "InputEmail1",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 30,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "aria-describedby": "emailHelp",
                              "className": "form-control",
                              "id": "email",
                              "name": "email",
                              "onChange": [Function],
                              "placeholder": "Enter email",
                              "type": "email",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              aria-describedby="emailHelp"
                              class="form-control"
                              id="email"
                              name="email"
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "label",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>,
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />,
                          ],
                          "className": "form-group",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                            "lineNumber": 32,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 62,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 33,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Password",
                              "htmlFor": "InputPassword1",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 63,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                                "lineNumber": 34,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "form-control",
                                "id": "InputPassword1",
                                "name": "password",
                                "onChange": [Function],
                                "placeholder": "Password",
                                "type": "password",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                class="form-control"
                                id="InputPassword1"
                                name="password"
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <label
                              for="InputPassword1"
                            >
                              Password
                            </label>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "label",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <label
                                htmlFor="InputPassword1"
                              >
                                Password
                              </label>,
                              <input
                                className="form-control"
                                id="InputPassword1"
                                name="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                              />,
                            ],
                            "className": "form-group",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/components/auth/Login.js",
                              "lineNumber": 36,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Login",
                              "className": "btn btn-success",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              class="btn btn-success"
                              type="submit"
                            >
                              Login
                            </button>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="form-group"
                          >
                            <label
                              for="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              class="form-control"
                              id="InputPassword1"
                              name="password"
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputEmail1"
                            >
                              Enter Email
                            </label>
                            <input
                              aria-describedby="emailHelp"
                              className="form-control"
                              id="email"
                              name="email"
                              onChange={[Function]}
                              placeholder="Enter email"
                              type="email"
                              value=""
                            />
                          </div>,
                          <div
                            className="form-group"
                          >
                            <label
                              htmlFor="InputPassword1"
                            >
                              Password
                            </label>
                            <input
                              className="form-control"
                              id="InputPassword1"
                              name="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                            />
                          </div>,
                          <button
                            className="btn btn-success"
                            type="submit"
                          >
                            Login
                          </button>,
                        ],
                        "onSubmit": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <form>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputEmail1"
                          >
                            Enter Email
                          </label>
                          <input
                            aria-describedby="emailHelp"
                            class="form-control"
                            id="email"
                            name="email"
                            placeholder="Enter email"
                            type="email"
                            value=""
                          />
                        </div>
                        <div
                          class="form-group"
                        >
                          <label
                            for="InputPassword1"
                          >
                            Password
                          </label>
                          <input
                            class="form-control"
                            id="InputPassword1"
                            name="password"
                            placeholder="Password"
                            type="password"
                            value=""
                          />
                        </div>
                        <button
                          class="btn btn-success"
                          type="submit"
                        >
                          Login
                        </button>
                      </form>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "stateNode": <hr />,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "stateNode": <h4>
                    Login
                  </h4>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "h4",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <h4>
                      Login
                    </h4>,
                    <hr />,
                    <form
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                      >
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />
                      </div>
                      <button
                        className="btn btn-success"
                        type="submit"
                      >
                        Login
                      </button>
                    </form>,
                  ],
                  "className": "login",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="login"
                >
                  <h4>
                    Login
                  </h4>
                  <hr />
                  <form>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>
                    <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>
                    <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>
                  </form>
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 1,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "LoginAction": [Function],
              },
              "memoizedState": Object {
                "email": "",
                "password": "",
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "LoginAction": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/hadijahkyampeire/Desktop/level-up/src/tests/components/auth/Login.test.js",
                  "lineNumber": 12,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 5,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "LoginAction": [MockFunction],
                },
                "memoizedState": Object {},
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "LoginAction": [MockFunction],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="login"
                            >
                              <h4>
                                Login
                              </h4>
                              <hr />
                              <form>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputEmail1"
                                  >
                                    Enter Email
                                  </label>
                                  <input
                                    aria-describedby="emailHelp"
                                    class="form-control"
                                    id="email"
                                    name="email"
                                    placeholder="Enter email"
                                    type="email"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputPassword1"
                                  >
                                    Password
                                  </label>
                                  <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />
                                </div>
                                <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>
                              </form>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Connect(Login)
                      LoginAction={[MockFunction]}
                    />,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "children": <Connect(Login)
                          LoginAction={[MockFunction]}
                        />,
                        "store": Object {
                          "dispatch": [Function],
                          "getAction": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "isActionDispatched": [Function],
                          "isActionTypeDispatched": [Function],
                          "subscribe": [Function],
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="login"
                            >
                              <h4>
                                Login
                              </h4>
                              <hr />
                              <form>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputEmail1"
                                  >
                                    Enter Email
                                  </label>
                                  <input
                                    aria-describedby="emailHelp"
                                    class="form-control"
                                    id="email"
                                    name="email"
                                    placeholder="Enter email"
                                    type="email"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="form-group"
                                >
                                  <label
                                    for="InputPassword1"
                                  >
                                    Password
                                  </label>
                                  <input
                                    class="form-control"
                                    id="InputPassword1"
                                    name="password"
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />
                                </div>
                                <button
                                  class="btn btn-success"
                                  type="submit"
                                >
                                  Login
                                </button>
                              </form>
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "children": <Connect(Login)
                                      LoginAction={[MockFunction]}
                                    />,
                                    "store": Object {
                                      "dispatch": [Function],
                                      "getAction": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "isActionDispatched": [Function],
                                      "isActionTypeDispatched": [Function],
                                      "subscribe": [Function],
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "children": <Connect(Login)
                                LoginAction={[MockFunction]}
                              />,
                              "store": Object {
                                "dispatch": [Function],
                                "getAction": [Function],
                                "getActions": [Function],
                                "getState": [Function],
                                "isActionDispatched": [Function],
                                "isActionTypeDispatched": [Function],
                                "subscribe": [Function],
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="login"
                          >
                            <h4>
                              Login
                            </h4>
                            <hr />
                            <form>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputEmail1"
                                >
                                  Enter Email
                                </label>
                                <input
                                  aria-describedby="emailHelp"
                                  class="form-control"
                                  id="email"
                                  name="email"
                                  placeholder="Enter email"
                                  type="email"
                                  value=""
                                />
                              </div>
                              <div
                                class="form-group"
                              >
                                <label
                                  for="InputPassword1"
                                >
                                  Password
                                </label>
                                <input
                                  class="form-control"
                                  id="InputPassword1"
                                  name="password"
                                  placeholder="Password"
                                  type="password"
                                  value=""
                                />
                              </div>
                              <button
                                class="btn btn-success"
                                type="submit"
                              >
                                Login
                              </button>
                            </form>
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "children": <Connect(Login)
                                  LoginAction={[MockFunction]}
                                />,
                                "store": Object {
                                  "dispatch": [Function],
                                  "getAction": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "isActionDispatched": [Function],
                                  "isActionTypeDispatched": [Function],
                                  "subscribe": [Function],
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <Connect(Login)
                            LoginAction={[MockFunction]}
                          />,
                          "store": Object {
                            "dispatch": [Function],
                            "getAction": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "isActionDispatched": [Function],
                            "isActionTypeDispatched": [Function],
                            "subscribe": [Function],
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Provider {
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                      "storeSubscription": null,
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Connect(Login)
                        LoginAction={[MockFunction]}
                      />,
                      "store": Object {
                        "dispatch": [Function],
                        "getAction": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "isActionDispatched": [Function],
                        "isActionTypeDispatched": [Function],
                        "subscribe": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Connect {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "store": Object {
                      "dispatch": [Function],
                      "getAction": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "isActionDispatched": [Function],
                      "isActionTypeDispatched": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": null,
                  },
                  "props": Object {
                    "LoginAction": [MockFunction],
                  },
                  "propsMode": false,
                  "refs": Object {},
                  "renderCount": 0,
                  "selector": Object {
                    "error": null,
                    "props": Object {
                      "LoginAction": [Function],
                    },
                    "run": [Function],
                    "shouldComponentUpdate": false,
                  },
                  "setWrappedInstance": [Function],
                  "state": Object {},
                  "store": Object {
                    "dispatch": [Function],
                    "getAction": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "isActionDispatched": [Function],
                    "isActionTypeDispatched": [Function],
                    "subscribe": [Function],
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                  "version": 0,
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "handleInputChange": [Function],
            "handleLogin": [Function],
            "props": Object {
              "LoginAction": [Function],
            },
            "refs": Object {},
            "state": Object {
              "email": "",
              "password": "",
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "LoginAction": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="login"
            >
              <h4>
                Login
              </h4>
              <hr />
              <form>
                <div
                  class="form-group"
                >
                  <label
                    for="InputEmail1"
                  >
                    Enter Email
                  </label>
                  <input
                    aria-describedby="emailHelp"
                    class="form-control"
                    id="email"
                    name="email"
                    placeholder="Enter email"
                    type="email"
                    value=""
                  />
                </div>
                <div
                  class="form-group"
                >
                  <label
                    for="InputPassword1"
                  >
                    Password
                  </label>
                  <input
                    class="form-control"
                    id="InputPassword1"
                    name="password"
                    placeholder="Password"
                    type="password"
                    value=""
                  />
                </div>
                <button
                  class="btn btn-success"
                  type="submit"
                >
                  Login
                </button>
              </form>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h4>
                  Login
                </h4>,
                <hr />,
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      className="form-control"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      className="form-control"
                      id="InputPassword1"
                      name="password"
                      onChange={[Function]}
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    className="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>,
              ],
              "className": "login",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <h4>
                  Login
                </h4>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Login",
                },
                "ref": null,
                "rendered": Array [
                  "Login",
                ],
                "type": "h4",
              },
              Object {
                "instance": <hr />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "hr",
              },
              Object {
                "instance": <form>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputEmail1"
                    >
                      Enter Email
                    </label>
                    <input
                      aria-describedby="emailHelp"
                      class="form-control"
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      type="email"
                      value=""
                    />
                  </div>
                  <div
                    class="form-group"
                  >
                    <label
                      for="InputPassword1"
                    >
                      Password
                    </label>
                    <input
                      class="form-control"
                      id="InputPassword1"
                      name="password"
                      placeholder="Password"
                      type="password"
                      value=""
                    />
                  </div>
                  <button
                    class="btn btn-success"
                    type="submit"
                  >
                    Login
                  </button>
                </form>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        className="form-control"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>,
                    <div
                      className="form-group"
                    >
                      <label
                        htmlFor="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        className="form-control"
                        id="InputPassword1"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>,
                    <button
                      className="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>,
                  ],
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="form-group"
                    >
                      <label
                        for="InputEmail1"
                      >
                        Enter Email
                      </label>
                      <input
                        aria-describedby="emailHelp"
                        class="form-control"
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        type="email"
                        value=""
                      />
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          htmlFor="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        <input
                          aria-describedby="emailHelp"
                          className="form-control"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />,
                      ],
                      "className": "form-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <label
                          for="InputEmail1"
                        >
                          Enter Email
                        </label>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Enter Email",
                          "htmlFor": "InputEmail1",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Enter Email",
                        ],
                        "type": "label",
                      },
                      Object {
                        "instance": <input
                          aria-describedby="emailHelp"
                          class="form-control"
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          type="email"
                          value=""
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "aria-describedby": "emailHelp",
                          "className": "form-control",
                          "id": "email",
                          "name": "email",
                          "onChange": [Function],
                          "placeholder": "Enter email",
                          "type": "email",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "input",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="form-group"
                    >
                      <label
                        for="InputPassword1"
                      >
                        Password
                      </label>
                      <input
                        class="form-control"
                        id="InputPassword1"
                        name="password"
                        placeholder="Password"
                        type="password"
                        value=""
                      />
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          htmlFor="InputPassword1"
                        >
                          Password
                        </label>,
                        <input
                          className="form-control"
                          id="InputPassword1"
                          name="password"
                          onChange={[Function]}
                          placeholder="Password"
                          type="password"
                          value=""
                        />,
                      ],
                      "className": "form-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <label
                          for="InputPassword1"
                        >
                          Password
                        </label>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Password",
                          "htmlFor": "InputPassword1",
                        },
                        "ref": null,
                        "rendered": Array [
                          "Password",
                        ],
                        "type": "label",
                      },
                      Object {
                        "instance": <input
                          class="form-control"
                          id="InputPassword1"
                          name="password"
                          placeholder="Password"
                          type="password"
                          value=""
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "form-control",
                          "id": "InputPassword1",
                          "name": "password",
                          "onChange": [Function],
                          "placeholder": "Password",
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "input",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <button
                      class="btn btn-success"
                      type="submit"
                    >
                      Login
                    </button>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Login",
                      "className": "btn btn-success",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Login",
                    ],
                    "type": "button",
                  },
                ],
                "type": "form",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
